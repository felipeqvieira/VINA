                    Substituir Membro

    A função `substituir_membro` tem como objetivo substituir os dados de um membro existente por novos dados fornecidos. Vamos analisar suas características e estruturas:

    - `novo_membro`: É um ponteiro para a estrutura `Membro` que contém os novos dados que serão atribuídos ao membro existente.

    - `indice_existente`: É um inteiro que representa o índice do membro existente no array de membros. Isso permite identificar qual membro deve ser substituído.

    - `membro_existente`: É um ponteiro para a estrutura `Membro` que representa o membro existente que será substituído pelos novos dados.

    A função realiza a substituição dos dados do membro existente pelos dados do novo membro utilizando atribuições simples de valores. Cada campo do membro existente é atualizado com o valor correspondente do novo membro:

    - `strcpy(membro_existente->nome, novo_membro->nome)`: Copia o nome do novo membro para o campo `nome` do membro existente.

    - `membro_existente->permissoes = novo_membro->permissoes`: Atribui as permissões do novo membro ao membro existente.

    - `membro_existente->tamanho = novo_membro->tamanho`: Atribui o tamanho do novo membro ao membro existente.

    - `membro_existente->data_modificacao = novo_membro->data_modificacao`: Atribui a data de modificação do novo membro ao membro existente.

    - `membro_existente->ordem = novo_membro->ordem`: Atribui a ordem do novo membro ao membro existente.

    - `membro_existente->localizacao = novo_membro->localizacao`: Atribui a localização do novo membro ao membro existente.

    - `membro_existente->user_ID = novo_membro->user_ID`: Atribui o user ID do novo membro ao membro existente.

    Essa função é útil quando é necessário atualizar os dados de um membro existente com novas informações. Ela permite manter a estrutura de dados atualizada e refletir as mudanças nos atributos do membro dentro do arquivo de archive.